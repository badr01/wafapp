'use strict';
angular.module('mgcrea.WafApp', [
  'ui.bootstrap',
  'smart-table',
  'ngAnimate',
  'ngRoute',
  'frapontillo.bootstrap-switch',
  'mgcrea.ngStrap'
]).constant('version', 'v0.1.0').config([
  '$locationProvider',
  '$routeProvider',
  '$httpProvider',
  function ($locationProvider, $routeProvider, $httpProvider) {
    //Enable cross domain calls
    $httpProvider.defaults.useXDomain = true;
    delete $httpProvider.defaults.headers.common['X-Requested-With'];
    $locationProvider.html5Mode(false);
    $routeProvider.when('/', { templateUrl: 'views/home.html' }).when('/etat', { templateUrl: '../views/etat.html' }).when('/manage', { templateUrl: '../views/manage.html' }).when('/whitelists', { templateUrl: '../views/whitelists.html' }).when('/journalisation', { templateUrl: '../views/journalisation.html' }).otherwise({ redirectTo: '/' });
  }
]);
'use strict';
var myApp = angular.module('mgcrea.WafApp');
myApp.controller('MainCtrl', [
  '$scope',
  '$location',
  'version',
  function ($scope, $location, version) {
    $scope.$path = $location.path.bind($location);
    $scope.version = version;
  }
]);
myApp.controller('EtatCtrl', [
  '$scope',
  '$http',
  '$log',
  'alertService',
  function ($scope, $http, $log, alertService) {
    $scope.isSelected = '';
    $scope.onText = 'ON';
    $scope.offText = 'OFF';
    $scope.isActive = true;
    $scope.size = 'large';
    $scope.animate = true;
    $scope.radioOff = true;
    $scope.handleWidth = 'auto';
    $scope.labelWidth = 'auto';
    $scope.inverse = true;
    $scope.$watch('isSelected', function () {
      $log.info('selected');
      var res = $http({
          method: 'POST',
          url: 'http://localhost:8080/status',
          data: '{"nginx":"kada","haproxy":"kada"}'
        });
      res.success(function (data) {
        //alert( "failure message: " + JSON.stringify({data: data}));
        alertService.addAlert('success', data);
      });
      res.error(function (data) {
        //alert( "failure message: " + JSON.stringify({data: data}));
        alertService.addAlert('danger', data);
      });
    });
  }
]);
myApp.directive('bootstrapSwitch', [function () {
    return {
      restrict: 'A',
      require: '?ngModel',
      link: function (scope, element, attrs, ngModel) {
        element.bootstrapSwitch();
        element.on('switchChange.bootstrapSwitch', function (event, state) {
          if (ngModel) {
            scope.$apply(function () {
              ngModel.$setViewValue(state);
            });
          }
        });
        scope.$watch(attrs.ngModel, function (newValue, oldValue) {
          if (newValue) {
            element.bootstrapSwitch('state', true, true);
          } else {
            element.bootstrapSwitch('state', false, true);
          }
        });
      }
    };
  }]);
myApp.service('alertService', [
  '$timeout',
  function ($timeout) {
    var data = [];
    this.alerts = function () {
      return data;
    };
    this.addAlert = function (type, msg) {
      data.push({
        type: type,
        msg: msg
      });
      $timeout(function () {
        data.splice(data.indexOf({
          type: type,
          msg: msg
        }), 1);
      }, 3000);
    };
    this.deleteAlert = function (index) {
      data.splice(index, 1);
    };
  }
]);
myApp.controller('alertCtrl', [
  '$scope',
  'alertService',
  function ($scope, alertService) {
    $scope.alerts = alertService.alerts();
    $scope.closeAlert = function (index) {
      alertService.deleteAlert(index);
    };
  }
]);
'use strict';
var myApp = angular.module('mgcrea.WafApp');
/*Pagination controller*/
myApp.controller('paginationCtrl', [
  '$scope',
  'Access',
  function (scope, Access) {
    scope.rowCollection = [];
    Access.get(null, function (data) {
      scope.rowCollection = data;
    });
    /* var res = http({method: 'GET', url: "/rest/logs/access"})
  res.success(function(data) {
    scope.rowCollection =data;
  });
   res.error(function(data) {
    //alert( "failure message: " + JSON.stringify({data: data}));
    alertService.addAlert('danger',data);
  });
*/
    scope.itemsByPage = 15;
  }
]);
/*date picker controller logic*/
myApp.controller('DatepickerDemoCtrl', [
  '$scope',
  function ($scope) {
    $scope.today = function (dt) {
      $scope[dt] = new Date();
    };
    $scope.today();
    $scope.clear = function (dt) {
      $scope[dt] = null;
    };
    $scope.open = function ($event, opened) {
      $event.preventDefault();
      $event.stopPropagation();
      $scope[opened] = opened;
    };
    $scope.dateOptions = {
      formatYear: 'yy',
      startingDay: 1
    };
    $scope.format = 'dd.MM.yyyy';
  }
]);